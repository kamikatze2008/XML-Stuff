//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.06 at 09:18:22 PM EET 
//


package generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Multiplying_QNAME = new QName("", "multiplying");
    private final static QName _FlowerColor_QNAME = new QName("", "flower_color");
    private final static QName _Watering_QNAME = new QName("", "watering");
    private final static QName _Origin_QNAME = new QName("", "origin");
    private final static QName _AverageSize_QNAME = new QName("", "average_size");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _Temperature_QNAME = new QName("", "temperature");
    private final static QName _Soil_QNAME = new QName("", "soil");
    private final static QName _Photophilous_QNAME = new QName("", "photophilous");
    private final static QName _StemColor_QNAME = new QName("", "stem_color");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Flower }
     * 
     */
    public Flower createFlower() {
        return new Flower();
    }

    /**
     * Create an instance of {@link Plant }
     * 
     */
    public Plant createPlant() {
        return new Plant();
    }

    /**
     * Create an instance of {@link VisualParameters }
     * 
     */
    public VisualParameters createVisualParameters() {
        return new VisualParameters();
    }

    /**
     * Create an instance of {@link GrowingTips }
     * 
     */
    public GrowingTips createGrowingTips() {
        return new GrowingTips();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MultiplyingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "multiplying")
    public JAXBElement<MultiplyingType> createMultiplying(MultiplyingType value) {
        return new JAXBElement<MultiplyingType>(_Multiplying_QNAME, MultiplyingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "flower_color")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createFlowerColor(String value) {
        return new JAXBElement<String>(_FlowerColor_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "watering")
    public JAXBElement<Double> createWatering(Double value) {
        return new JAXBElement<Double>(_Watering_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "origin")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createOrigin(String value) {
        return new JAXBElement<String>(_Origin_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Float }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "average_size")
    public JAXBElement<Float> createAverageSize(Float value) {
        return new JAXBElement<Float>(_AverageSize_QNAME, Float.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Float }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "temperature")
    public JAXBElement<Float> createTemperature(Float value) {
        return new JAXBElement<Float>(_Temperature_QNAME, Float.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SoilType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "soil")
    public JAXBElement<SoilType> createSoil(SoilType value) {
        return new JAXBElement<SoilType>(_Soil_QNAME, SoilType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "photophilous")
    public JAXBElement<Boolean> createPhotophilous(Boolean value) {
        return new JAXBElement<Boolean>(_Photophilous_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "stem_color")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createStemColor(String value) {
        return new JAXBElement<String>(_StemColor_QNAME, String.class, null, value);
    }

}
